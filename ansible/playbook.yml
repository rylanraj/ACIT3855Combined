- name: Git pull and restart Docker on AWS t3.medium instance
  hosts: web
  become: yes
  vars:
    git_repo_dir: "/home/ubuntu/ACIT3855Combined"
    log_dir: "{{ git_repo_dir }}/logs"
    log_files:
      - analyzer.log
      - processing.log
      - receiver.log
      - storage.log

  tasks:
    - name: Ensure required packages are installed
      apt:
        name: git
        state: present

    - name: Pull latest code from Git
      git:
        repo: "https://github.com/rylanraj/ACIT3855Combined.git"
        dest: "{{ git_repo_dir }}"
        version: main
        force: true
        update: yes

    - name: Stop running containers
      community.docker.docker_compose:
        project_src: "{{ git_repo_dir }}"
        state: absent
        remove_volumes: true

    - name: Remove old logs
      file:
        path: "{{ log_dir }}"
        state: absent

    - name: Remove old stats.json
      file:
        path: "{{ git_repo_dir }}/data/processing/stats.json"
        state: absent

    - name: Remove old MySQL Data
      file:
        path: "{{ git_repo_dir }}/data/database/mysql"
        state: absent

    - name: Recreate stats.json
      file:
        path: "{{ git_repo_dir }}/data/processing/stats.json"
        state: touch

    - name: Recreate MySQL Data
      file:
        path: "{{ git_repo_dir }}/data/database/mysql"
        state: directory

    - name: Recreate logs directory
      file:
        path: "{{ log_dir }}"
        state: directory
        mode: '0755'

    - name: Create log files and set permissions
      file:
        path: "{{ log_dir }}/{{ item }}"
        state: touch
        mode: '0666'
      loop: "{{ log_files }}"

    - name: Run docker compose up
      command: docker compose up --build -d
      args:
        chdir: "{{ git_repo_dir }}"
      register: docker_result

    - name: Wait 20 seconds for containers to start
      pause:
        seconds: 20

    - name: Create tables in storage
      command: docker compose exec storage python manage.py create
      args:
        chdir: "{{ git_repo_dir }}"
      register: docker_result

    - name: Restart storage container
      command: docker compose restart storage
      args:
        chdir: "{{ git_repo_dir }}"
      register: docker_result

    - name: Restart nginx
      command: docker compose restart nginx
      args:
          chdir: "{{ git_repo_dir }}"
      register: docker_result
