services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
        - rylan
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092"
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
    networks:
      - rylan
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      # Change these below
      MYSQL_DATABASE: 'reports'
      MYSQL_USER: 'rylan'
      MYSQL_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      # Where our data will be persisted
      - my-db:/var/lib/mysql
    networks:
      - rylan

  receiver:
    build: ./receiver
    restart: always
    ports:
      - "8080:8080"
    networks:
      - rylan
    depends_on:
      - "kafka"
    volumes:
      - ./config/receiver_config.yml:/app/receiver_config.yml
      - ./config/log_config.yml:/app/log_config.yml
      - ./logs/receiver.log:/app/app.log

  storage:
    build: ./storage
    restart: always
    ports:
      - "8090"
    networks:
      - rylan
    depends_on:
      - "db"
      - "kafka"
    volumes:
      - ./config/storage_config.yml:/app/storage_config.yml
      - ./logs/storage.log:/app/app.log
      - ./config/log_config.yml:/app/log_config.yml

  processing:
    build: ./processing
    restart: always
    ports:
      - "8100:8100"
    networks:
      - rylan
    depends_on:
      - "storage"
    volumes:
      - ./config/processing_config.yml:/app/processing_config.yml
      - ./config/log_config.yml:/app/log_config.yml
      - ./data/processing/stats.json:/app/stats.json
      - ./logs/processing.log:/app/app.log

  analyzer:
    build: ./analyzer
    restart: always
    ports:
      - "8110:8110"
    networks:
      - rylan
    depends_on:
      - "kafka"
    volumes:
      - ./config/analyzer_config.yml:/app/analyzer_config.yml
      - ./config/log_config.yml:/app/log_config.yml
      - ./logs/analyzer.log:/app/app.log


networks:
  rylan:
    driver: bridge

# Defines a named volume
volumes:
  my-db: